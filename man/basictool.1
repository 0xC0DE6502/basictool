.TH BASICTOOL 1 "July 2021" "basictool 0.05" "User Commands"
.SH NAME
basictool \- tokenise, de-tokenise, pack, unpack and analyse BBC BASIC programs
.SH SYNOPSIS
.B basictool
[\fI\,OPTION\/\fR]... INPUTFILE [\fI\,OUTPUTFILE\/\fR]
.SH DESCRIPTION
.BR basictool
can convert BBC BASIC programs between ASCII text and the tokenised form used by (6502) BBC BASIC. It can also pack programs (making them shorter but less readable), unpack them (to partially reverse the effects of packing) and generate variable and line number references. Behind the scenes, it is really a specialised BBC Micro emulator which uses the BBC BASIC and Advanced BASIC Editor ROMs to operate on BBC BASIC programs.
.PP
.BR basictool
expects at least one argument, the name of the input file. The input may be either tokenised or ASCII BBC BASIC;
.BR basictool
will auto-detect the type of input, although this can be overridden using
.IR \-\-input\-tokenised
if necessary.
.BR basictool
does not care about file extensions; auto detection is based on the file contents. To read from standard input, specify the input file as
.IR \-
\&. A second argument, the name of the output file, may be given; standard output will be used by default.
.PP
Text input to
.BR basictool
can use the standard BBC BASIC abbreviations (such as "P." for "PRINT"). Line numbers are also optional; lines with no number will be automatically assigned the next line number in sequence.
.PP
TODO: Maybe somewhere in here describe the way basictool operates on a input-process-output basis and how you have to choose exactly one output option?
.PP
TODO: Anything else? (check README)
.SH OPTIONS
.TP
\fB\-h\fR, \fB\-\-help\fR
Show a description of
.BR basictool
and list the available options.
.TP
\fB\-\-roms\fR
Show information about the BBC BASIC and Advanced BASIC Editor ROMs built into
.BR basictool .
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Increase the verbosity of
.BR basictool 's
output; this can be specified twice for extra-verbose output.
.TP
\fB\-\-show\-all\-output\fR
Show all output from the hidden emulated BBC Micro. 
.BR basictool
normally parses the output internally but does not show it to the user. This is mostly useful for debugging or to see what's going on behind the scenes.
.TP
\fB\-\-input-tokenised\fR
Assume that the input file is tokenised BASIC instead of trying to auto-detect whether it is text or tokenised BASIC. This should not normally be necessary, but in rare cases (such as a tokenised BASIC program with machine code attached at the end) the auto-detection heuristics may fail. There is no way to explicitly force the input to be treated as text BASIC and it shouldn't be necessary to do this.
.TP
\fB\-k\fR, \fB\-\-keep\-spaces\fR
By default
.BR basictool
will strip leading spaces from each line of text BASIC input; this option disables this behaviour.
.RB ( basictool
- to be precise, the BASIC 4 ROM it uses - will also strip trailing spaces from each line of text BASIC input; this cannot be disabled, since it's implemented by BASIC itself.)
.TP
TODO!
.SH EXIT STATUS
.BR basictool
will exit with a zero exit status if no errors occur; errors are indicated by a non-zero exit status.
.SH EXAMPLES
.PP
Tokenise an ASCII BASIC program so it can be loaded by BBC BASIC.
.br
.EX
$ \fBbasictool -t prog.txt prog.tok\fP
.EE
.br
.PP
Display a tokenised BASIC program as human-readable ASCII.
.br
.EX
$ \fBbasictool prog.tok\fP
.EE
.PP
Tokenise and pack an ASCII BASIC program so it can be loaded by BBC BASIC and use less memory.
.br
.EX
$ \fBbasictool -t -p prog.txt prog.tok\fP
.EE
.\" TODO: more?
.SH AUTHORS
.BR basictool
was written by Steven Flintham. It builds on several other existing pieces of code, most notably the BBC BASIC and Advanced BASIC Editor ROMs, which actually do most of the work, and lib6502, which allows the 6502 code in those ROMs to be executed.
.PP
BBC BASIC was (of course) originally published by Acorn.
.PP
The BASIC editor and utilities were originally published separately by Altra. The Advanced BASIC Editor ROMs used here are (C) Baildon Electronics. Thanks to Dave Hitchins for his support for developing
.BR basictool
using these ROMs.
.PP
lib6502 was originally written by Ian Piumarta, although
.BR basictool
uses the version from PiTubeClient (https://github.com/hoglet67/PiTubeClient).
.PP
Cross-platform command line parsing is performed using cargs (https://github.com/likle/cargs).
